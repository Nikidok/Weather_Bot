import os
import datetime
import requests
import math  # –î–æ–±–∞–≤–∏–ª –∏–º–ø–æ—Ä—Ç math
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from settings import *  # –£–±–µ–¥–∏—Å—å, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å settings.py —Å BOT_TOKEN

bot = Bot(BOT_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=["start"])
async def start_command(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –∏ —è –ø—Ä–∏—à–ª—é —Å–≤–æ–¥–∫—É –ø–æ–≥–æ–¥—ã")

@dp.message_handler()
async def get_weather(message: types.Message):
    try:
        city_name = message.text.strip()  # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        response = requests.get(f"http://api.openweathermap.org/data/2.5/weather?q={city_name}&lang=ru&units=metric&appid=b4e141d705f7bcd2dfa53f5b58583a7a")
        data = response.json()

        if data.get("cod") != 200:
            await message.reply("–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è.")
            return

        city = data["name"]
        cur_temp = data["main"]["temp"]
        humidity = data["main"]["humidity"]
        pressure = data["main"]["pressure"]
        wind = data["wind"]["speed"]

        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≤–æ—Å—Ö–æ–¥, –∑–∞–∫–∞—Ç –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è
        sunrise_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunrise"])
        sunset_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunset"])
        length_of_the_day = sunset_timestamp - sunrise_timestamp

        code_to_smile = {
            "Clear": "–Ø—Å–Ω–æ ‚òÄÔ∏è",
            "Clouds": "–û–±–ª–∞—á–Ω–æ ‚òÅÔ∏è",
            "Rain": "–î–æ–∂–¥—å üåß",
            "Drizzle": "–ú–µ–ª–∫–∏–π –¥–æ–∂–¥—å üå¶",
            "Thunderstorm": "–ì—Ä–æ–∑–∞ ‚ö°",
            "Snow": "–°–Ω–µ–≥ ‚ùÑ",
            "Mist": "–¢—É–º–∞–Ω üå´"
        }

        weather_description = data["weather"][0]["main"]
        wd = code_to_smile.get(weather_description, "–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ç–∞–º –∑–∞ –ø–æ–≥–æ–¥–∞...")

        await message.reply(
            f"{datetime.datetime.now().strftime('%Y-%m-%d %H:%M')}\n"
            f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_temp}¬∞C {wd}\n"
            f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
            f"–î–∞–≤–ª–µ–Ω–∏–µ: {math.ceil(pressure / 1.333)} –º–º.—Ä—Ç.—Å—Ç\n"
            f"–í–µ—Ç–µ—Ä: {wind} –º/—Å\n"
            f"–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞: {sunrise_timestamp.strftime('%H:%M')}\n"
            f"–ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞: {sunset_timestamp.strftime('%H:%M')}\n"
            f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: {str(length_of_the_day).split('.')[0]}\n"
            f"–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! üåû"
        )

    except Exception as e:
        await message.reply("–û—à–∏–±–∫–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.")
        print(f"–û—à–∏–±–∫–∞: {e}")  # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

if __name__ == "__main__":
    executor.start_polling(dp)
